/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf')
var goog = jspb
var global = Function('return this')()

var Command_pb = require('./Command_pb.js')
var FuturesQuoteData_pb = require('./FuturesQuoteData_pb.js')
var FuturesQuoteSimpleData_pb = require('./FuturesQuoteSimpleData_pb.js')
goog.exportSymbol('proto.MessageBase', null, global)

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MessageBase = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.MessageBase.repeatedFields_, null)
}
goog.inherits(proto.MessageBase, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  proto.MessageBase.displayName = 'proto.MessageBase'
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.MessageBase.repeatedFields_ = [7]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.MessageBase.prototype.toObject = function (opt_includeInstance) {
    return proto.MessageBase.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.MessageBase} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.MessageBase.toObject = function (includeInstance, msg) {
    var f, obj = {
      clientid: jspb.Message.getFieldWithDefault(msg, 1, ''),
      cmd: jspb.Message.getFieldWithDefault(msg, 2, 0),
      type: jspb.Message.getFieldWithDefault(msg, 3, 0),
      requesttype: jspb.Message.getFieldWithDefault(msg, 4, 0),
      data: jspb.Message.getFieldWithDefault(msg, 5, ''),
      fq: (f = msg.getFq()) && FuturesQuoteData_pb.FuturesQuoteDataBase.toObject(includeInstance, f),
      fqlistList: jspb.Message.toObjectList(msg.getFqlistList(),
        FuturesQuoteSimpleData_pb.FuturesQuoteSimpleDataBase.toObject, includeInstance)
    }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MessageBase}
 */
proto.MessageBase.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.MessageBase()
  return proto.MessageBase.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MessageBase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MessageBase}
 */
proto.MessageBase.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setClientid(value)
        break
      case 2:
        var value = /** @type {!proto.CommandType} */ (reader.readEnum())
        msg.setCmd(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readInt64())
        msg.setType(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readInt64())
        msg.setRequesttype(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setData(value)
        break
      case 6:
        var value = new FuturesQuoteData_pb.FuturesQuoteDataBase()
        reader.readMessage(value, FuturesQuoteData_pb.FuturesQuoteDataBase.deserializeBinaryFromReader)
        msg.setFq(value)
        break
      case 7:
        var value = new FuturesQuoteSimpleData_pb.FuturesQuoteSimpleDataBase()
        reader.readMessage(value, FuturesQuoteSimpleData_pb.FuturesQuoteSimpleDataBase.deserializeBinaryFromReader)
        msg.addFqlist(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MessageBase.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.MessageBase.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MessageBase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MessageBase.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getClientid()
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    )
  }
  f = message.getCmd()
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    )
  }
  f = message.getType()
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    )
  }
  f = message.getRequesttype()
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    )
  }
  f = message.getData()
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    )
  }
  f = message.getFq()
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      FuturesQuoteData_pb.FuturesQuoteDataBase.serializeBinaryToWriter
    )
  }
  f = message.getFqlistList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      FuturesQuoteSimpleData_pb.FuturesQuoteSimpleDataBase.serializeBinaryToWriter
    )
  }
}

/**
 * optional string clientId = 1;
 * @return {string}
 */
proto.MessageBase.prototype.getClientid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/** @param {string} value */
proto.MessageBase.prototype.setClientid = function (value) {
  jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional CommandType cmd = 2;
 * @return {!proto.CommandType}
 */
proto.MessageBase.prototype.getCmd = function () {
  return /** @type {!proto.CommandType} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/** @param {!proto.CommandType} value */
proto.MessageBase.prototype.setCmd = function (value) {
  jspb.Message.setProto3EnumField(this, 2, value)
}

/**
 * optional int64 type = 3;
 * @return {number}
 */
proto.MessageBase.prototype.getType = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0))
}

/** @param {number} value */
proto.MessageBase.prototype.setType = function (value) {
  jspb.Message.setProto3IntField(this, 3, value)
}

/**
 * optional int64 requestType = 4;
 * @return {number}
 */
proto.MessageBase.prototype.getRequesttype = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0))
}

/** @param {number} value */
proto.MessageBase.prototype.setRequesttype = function (value) {
  jspb.Message.setProto3IntField(this, 4, value)
}

/**
 * optional string data = 5;
 * @return {string}
 */
proto.MessageBase.prototype.getData = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/** @param {string} value */
proto.MessageBase.prototype.setData = function (value) {
  jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional FuturesQuoteDataBase fq = 6;
 * @return {?proto.FuturesQuoteDataBase}
 */
proto.MessageBase.prototype.getFq = function () {
  return /** @type{?proto.FuturesQuoteDataBase} */ (
    jspb.Message.getWrapperField(this, FuturesQuoteData_pb.FuturesQuoteDataBase, 6))
}

/** @param {?proto.FuturesQuoteDataBase|undefined} value */
proto.MessageBase.prototype.setFq = function (value) {
  jspb.Message.setWrapperField(this, 6, value)
}

proto.MessageBase.prototype.clearFq = function () {
  this.setFq(undefined)
}

/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.MessageBase.prototype.hasFq = function () {
  return jspb.Message.getField(this, 6) != null
}

/**
 * repeated FuturesQuoteSimpleDataBase fqList = 7;
 * @return {!Array<!proto.FuturesQuoteSimpleDataBase>}
 */
proto.MessageBase.prototype.getFqlistList = function () {
  return /** @type{!Array<!proto.FuturesQuoteSimpleDataBase>} */ (
    jspb.Message.getRepeatedWrapperField(this, FuturesQuoteSimpleData_pb.FuturesQuoteSimpleDataBase, 7))
}

/** @param {!Array<!proto.FuturesQuoteSimpleDataBase>} value */
proto.MessageBase.prototype.setFqlistList = function (value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value)
}

/**
 * @param {!proto.FuturesQuoteSimpleDataBase=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FuturesQuoteSimpleDataBase}
 */
proto.MessageBase.prototype.addFqlist = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.FuturesQuoteSimpleDataBase, opt_index)
}

proto.MessageBase.prototype.clearFqlistList = function () {
  this.setFqlistList([])
}

goog.object.extend(exports, proto)
